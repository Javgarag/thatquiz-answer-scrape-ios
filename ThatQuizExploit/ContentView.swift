//
//  ContentView.swift
//  ThatQuizExploit
//
//  Created by Javgarag on 4/2/25.
//

import SwiftUI
import Foundation
import WebKit

struct WebView: UIViewRepresentable {
    let navigationDelegate: WKNavigationDelegate
    
    func makeUIView(context: Context) -> WKWebView {
        let webViewUserController = WKUserContentController()
        
        let webViewConfiguration = WKWebViewConfiguration() // Configuration object.
        webViewConfiguration.userContentController = webViewUserController
        webViewConfiguration.userContentController.add(MessageHandler.shared, name: "handleAnswer") // Add answer handler
        
        #if DEBUG
        webViewConfiguration.userContentController.add(MessageHandler.shared, name: "debug")
        #endif
        
        let webView = WKWebView(frame: UIScreen.main.bounds, configuration: webViewConfiguration)
        webView.navigationDelegate = self.navigationDelegate
        webView.allowsBackForwardNavigationGestures = true
        
        let thatQuizURL = URL(string: "https://www.thatquiz.org/")!
        webView.load(URLRequest(url: thatQuizURL))
        
        return webView
    }
    
    func updateUIView(_ webView: WKWebView, context: Context) {}
}

struct AnswerView: View {
    @StateObject var answerHandler = MessageHandler.shared
    var body: some View {
        if answerHandler.answers.isEmpty {
            VStack {
                Text("No questions loaded").bold()
                Text("Note that multiple choice answers will NOT be displayed as they are not implemented.").foregroundStyle(.red)
            }
        } else {
            List {
                Text("To ensure every answer has been loaded, click through to the end of the quiz, then input them accordingly.")
                Text("Coordinates indicate textfield positions starting from the bottom left corner.").bold()
                Text("Note that multiple choice answers will NOT be displayed as they are not implemented.").foregroundStyle(.red)
                
                ForEach(answerHandler.answers, id: \.self) { answer in
                    Section(header: Text("Answer #\(answerHandler.answers.firstIndex(where: {$0 == answer})! + 1)")) {
                        Text(answer.question ?? "Text Field")
                            .bold()
                        Text("Answer: \(answer.answer ?? "Unknown answer to question!")").foregroundStyle(.green)
                        if let x_coordinate = answer.x {
                            Text("X Coordinate: \(x_coordinate)")
                        }
                        if let y_coordinate = answer.y {
                            Text("Y Coordinate: \(y_coordinate)")
                        }
                    }
                }
            }
        }
    }
}

struct ContentView: View {
    @State var selectedTab = 0
    
    var body: some View {
        TabView(selection: $selectedTab) {
            WebView(navigationDelegate: WebViewNavigationDelegate())
                .tabItem {
                    Label("Main Page", systemImage: "book.pages")
                }
                .tag(0)
            AnswerView()
                .tabItem {
                    Label("Answers", systemImage: "checkmark")
                }
                .tag(1)
        }
        
    }
}

#Preview {
    ContentView()
}
