//
//  WebViewUIDelegate.swift
//  ThatQuizExploit
//
//  Created by Javgarag on 4/2/25.
//

import WebKit
import Foundation

struct Answer: Decodable, Equatable, Hashable {
    enum QuestionType: String, Decodable {
        case text, slide, multiplechoice
    }
    
    var type: QuestionType
    var question: String?
    var answer: String?
    var x: String?
    var y: String?
}

class MessageHandler: NSObject, WKScriptMessageHandler, ObservableObject {
    static let shared = MessageHandler()
    @Published var answers: [Answer] = []

    func userContentController(_ userContentController: WKUserContentController, didReceive message: WKScriptMessage) {
        if message.name == "handleAnswer" {
            let answer = try! JSONDecoder().decode(Answer.self, from: JSONSerialization.data(withJSONObject: message.body))
            
            if answer.type != .multiplechoice && answers.contains(where: {$0 == answer}) {
                return
            }
            
            answers.append(answer)
        }
        
        #if DEBUG
        if message.name == "debug" {
            print(message.body)
        }
        #endif
    }
}

class WebViewNavigationDelegate: NSObject, WKNavigationDelegate {
    func webView(_ webView: WKWebView, didFinish navigation: WKNavigation!) {
        let userScript = """
            function decodeHtml(html) { // https://stackoverflow.com/questions/7394748/whats-the-right-way-to-decode-a-string-that-has-special-html-entities-in-it
                var txt = document.createElement("textarea");
                txt.innerHTML = html;
                return txt.value;
            }
        
            old_aY3 = window.aY3 // biglib.js contains function aY3() which is passed an Array. In case of a short answer type, a[0] is the question and a[1] is the answer in bytes.
            window.aY3 = function(a) {
                if (a.length == 3) {
                    question = a[0]
                    answer = decodeHtml(a[1])
                    window.webkit.messageHandlers.handleAnswer.postMessage({"type":"text","question":question.toString(),"answer":answer.toString()})
                }
                                  
                old_aY3(a)
            }
            
            if (typeof DomJs != "undefined") { // Type "Slides" function, will only exist if quiz is of corresponding type.
                old_g65x = DomJs.g65x
                DomJs.g65x = function(b) {
                    try {
                        var type_index = b.t
                        var element_type = DomJs.g65f[type_index]
                
                        if (element_type == "input") {
                            e = b.a || {}
                            var answer = e.v
                            var text = e.t != "radio" && e.t || "Multiple Choice"
                
                            var horizontal_pos = b.s && b.s.l || "?"
                            var vertical_pos = b.s && (270 - b.s.t) || "?" 
                
                           window.webkit.messageHandlers.handleAnswer.postMessage({"type":"slide","answer":answer.toString(),"x":horizontal_pos.toString(),"y":vertical_pos.toString()})
                        }
                    } catch (e) {
                        // Nothing
                    } finally {
                        return old_g65x(b)
                    }
                }
            }
        """
        
        webView.evaluateJavaScript(userScript)
        MessageHandler.shared.answers = []
        
        #if DEBUG
        webView.evaluateJavaScript("")
        #endif
    }
}
